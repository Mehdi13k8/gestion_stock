# Generated by Django 2.1.7 on 2019-04-05 09:45

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_partenaire', models.BooleanField(default=False)),
                ('is_client', models.BooleanField(default=False)),
                ('is_transporteur', models.BooleanField(default=False)),
                ('nom', models.CharField(max_length=100)),
                ('coordonnee', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('adresse', models.CharField(max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AcceptationCommandeLivraison',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentaire', models.CharField(max_length=150)),
                ('is_accepted', models.BooleanField(default=False, verbose_name='accepter ?')),
                ('Date', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='AcceptationLivraison',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commentaire', models.CharField(max_length=150)),
                ('is_accepted', models.BooleanField(default=False, verbose_name='accepter ?')),
                ('Date', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Appreciation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('message', models.CharField(max_length=150)),
                ('qualite', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(5)])),
                ('Date', models.DateField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Camion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=30, null=True)),
                ('matricule', models.CharField(blank=True, max_length=30, null=True)),
                ('nb_palettes', models.IntegerField(default=8)),
                ('photo', models.ImageField(blank=True, upload_to='photos/')),
                ('disponible', models.BooleanField(default=True, verbose_name='disponible ?')),
                ('plein', models.BooleanField(default=False, verbose_name='plein ?')),
            ],
        ),
        migrations.CreateModel(
            name='chose',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('body', models.TextField()),
                ('Date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name="Date d'inscription")),
            ],
            options={
                'verbose_name': 'Client',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Commande',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refproduit', models.CharField(max_length=30)),
                ('reference', models.CharField(max_length=30)),
                ('destinataire', models.CharField(max_length=50)),
                ('specifite', models.CharField(max_length=30)),
                ('quantite', models.IntegerField(default=1)),
                ('dateDepart', models.DateField()),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commandes', to='flexible.Client')),
            ],
        ),
        migrations.CreateModel(
            name='Entrepot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=30)),
                ('geom', django.contrib.gis.db.models.fields.PointField(blank=True, null=True, srid=4326)),
                ('adresse', models.CharField(max_length=100)),
                ('city', models.CharField(max_length=50)),
                ('capacite', models.IntegerField()),
                ('specificite', models.CharField(max_length=100)),
                ('photo', models.ImageField(blank=True, upload_to='photos/')),
            ],
        ),
        migrations.CreateModel(
            name='Message',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField()),
                ('Date', models.DateField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='utilisateur', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='OffreCommandeLivraison',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=30)),
                ('refproduit', models.CharField(max_length=30)),
                ('categorie', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2)])),
                ('depart', models.CharField(default='Paris', max_length=30)),
                ('arrive', models.CharField(default='Paris', max_length=30)),
                ('adresse', models.CharField(default='50 rue de la place', max_length=150)),
                ('adresse2', models.CharField(default='500 rue de la République', max_length=150)),
                ('datedepart', models.DateField()),
                ('date', models.DateField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='livraisonTransport', to='flexible.Client')),
            ],
        ),
        migrations.CreateModel(
            name='OffreL',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=30)),
                ('quantité', models.IntegerField()),
                ('categorie', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('datearrive', models.DateField()),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offreC', to='flexible.Client')),
            ],
        ),
        migrations.CreateModel(
            name='OffreLivraison',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=30)),
                ('categorie', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('datearrive', models.DateField()),
                ('Date', models.DateField(auto_now=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mesoffres', to='flexible.Client')),
                ('entrepot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mesoffres', to='flexible.Entrepot')),
                ('offre', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='mesoffres', to='flexible.OffreL')),
            ],
        ),
        migrations.CreateModel(
            name='Partenaire',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=django.utils.timezone.now, verbose_name='Date de creation')),
                ('clientele', models.ManyToManyField(through='flexible.OffreLivraison', to='flexible.Client')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Partenaire',
                'ordering': ['date'],
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=30, null=True)),
                ('refproduit', models.CharField(blank=True, max_length=30, null=True)),
                ('destinataire', models.CharField(blank=True, max_length=30, null=True)),
                ('categorie', models.CharField(max_length=30)),
                ('nb_palettes', models.IntegerField(default=1)),
                ('state', models.BooleanField(default=False, verbose_name='rempli ?')),
                ('entrepot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='places', to='flexible.Entrepot')),
                ('partenaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='places', to='flexible.Partenaire')),
            ],
        ),
        migrations.CreateModel(
            name='Produit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refproduit', models.CharField(max_length=30)),
                ('designation', models.CharField(max_length=30)),
                ('categorie', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('photo', models.ImageField(blank=True, upload_to='photos/')),
                ('clientProp', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='produits', to='flexible.Client')),
            ],
        ),
        migrations.CreateModel(
            name='SendFile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('file', models.FileField(upload_to='photos/')),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='livraison_files', to='flexible.Client')),
                ('offre', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='livraison_files', to='flexible.OffreLivraison')),
                ('partenaire', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='livraison_files', to='flexible.Partenaire')),
            ],
        ),
        migrations.CreateModel(
            name='SuiviStock',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refproduit', models.CharField(max_length=30)),
                ('premiereentree', models.DateField()),
                ('dernieremodification', models.DateField()),
                ('quantitedispo', models.IntegerField(default=1)),
                ('conditionnement', models.CharField(max_length=30)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suivistocks', to='flexible.Client')),
                ('entrepot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suivistocks', to='flexible.Entrepot')),
            ],
        ),
        migrations.CreateModel(
            name='SuiviTransporteur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(max_length=30)),
                ('immatricule', models.CharField(max_length=30)),
                ('livraison', models.BooleanField(default=False, verbose_name='livraison ?')),
                ('enlevement', models.BooleanField(default=False, verbose_name='enlevement ?')),
                ('date', models.DateField()),
                ('nb_palettes', models.IntegerField(default=1)),
                ('entrepot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suivitransports', to='flexible.Entrepot')),
            ],
        ),
        migrations.CreateModel(
            name='Tarif',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=30, null=True)),
                ('categorie', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('nb_palettes', models.IntegerField(default=1)),
                ('prix', models.IntegerField()),
                ('entrepot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tarifs', to='flexible.Entrepot')),
            ],
        ),
        migrations.CreateModel(
            name='TarifTransport',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('designation', models.CharField(blank=True, max_length=30, null=True)),
                ('depart', models.CharField(blank=True, max_length=30, null=True)),
                ('arrive', models.CharField(blank=True, max_length=30, null=True)),
                ('categorie', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(2)])),
                ('nb_palettes', models.IntegerField(default=1)),
                ('prix', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Trajet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('voyage', models.CharField(blank=True, max_length=30)),
                ('date', models.DateField(auto_now=True)),
                ('effectue', models.BooleanField(default=False, verbose_name='effectue ?')),
                ('encours', models.BooleanField(default=False, verbose_name='en cours ?')),
                ('camion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='camions', to='flexible.Camion')),
            ],
        ),
        migrations.CreateModel(
            name='Transporteur',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specificite', models.CharField(max_length=30)),
                ('disponibilite', models.BooleanField(default=True, verbose_name='libre ?')),
                ('clientele', models.ManyToManyField(through='flexible.OffreCommandeLivraison', to='flexible.Client')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='tariftransport',
            name='transporteur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tarifsTransport', to='flexible.Transporteur'),
        ),
        migrations.AddField(
            model_name='suivitransporteur',
            name='transporteur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='suivitransports', to='flexible.Transporteur'),
        ),
        migrations.AddField(
            model_name='offrelivraison',
            name='partenaire',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='mesoffres', to='flexible.Partenaire'),
        ),
        migrations.AddField(
            model_name='offrel',
            name='produit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offreC', to='flexible.Produit'),
        ),
        migrations.AddField(
            model_name='offrecommandelivraison',
            name='offre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='livraisonTransport', to='flexible.OffreLivraison'),
        ),
        migrations.AddField(
            model_name='offrecommandelivraison',
            name='transporteur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='livraisonTransport', to='flexible.Transporteur'),
        ),
        migrations.AddField(
            model_name='entrepot',
            name='partenaireProp',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entrepots', to='flexible.Partenaire'),
        ),
        migrations.AddField(
            model_name='commande',
            name='partenaire',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commandes', to='flexible.Partenaire'),
        ),
        migrations.AddField(
            model_name='commande',
            name='transporteur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commandes', to='flexible.Transporteur'),
        ),
        migrations.AddField(
            model_name='client',
            name='crossdocker',
            field=models.ManyToManyField(through='flexible.OffreLivraison', to='flexible.Partenaire'),
        ),
        migrations.AddField(
            model_name='client',
            name='transporteurs',
            field=models.ManyToManyField(through='flexible.OffreCommandeLivraison', to='flexible.Transporteur'),
        ),
        migrations.AddField(
            model_name='client',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='camion',
            name='transporteur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='camions', to='flexible.Transporteur'),
        ),
        migrations.AddField(
            model_name='appreciation',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appreciation', to='flexible.Client'),
        ),
        migrations.AddField(
            model_name='appreciation',
            name='partenaire',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appreciation', to='flexible.Partenaire'),
        ),
        migrations.AddField(
            model_name='acceptationlivraison',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='livraison_acceptations', to='flexible.Client'),
        ),
        migrations.AddField(
            model_name='acceptationlivraison',
            name='offre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='livraison_acceptations', to='flexible.OffreLivraison'),
        ),
        migrations.AddField(
            model_name='acceptationlivraison',
            name='partenaire',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='livraison_acceptations', to='flexible.Partenaire'),
        ),
        migrations.AddField(
            model_name='acceptationcommandelivraison',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='demmandeTransport', to='flexible.Client'),
        ),
        migrations.AddField(
            model_name='acceptationcommandelivraison',
            name='offre',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='demmandeTransport', to='flexible.OffreCommandeLivraison'),
        ),
        migrations.AddField(
            model_name='acceptationcommandelivraison',
            name='transporteur',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='demmandeTransport', to='flexible.Transporteur'),
        ),
    ]
